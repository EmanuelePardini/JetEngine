plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.15'
  id 'org.openjfx.javafxplugin' version '0.1.0'
  id 'org.beryx.jlink' version '3.0.1'
}

group 'gameengine'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  lwjglVersion = '3.3.3'
  imguiVersion = '1.81.0'
  junitVersion = '5.10.2'
}

java {
  sourceCompatibility = '17'
  targetCompatibility = '17'
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  destinationDirectory.set(layout.buildDirectory.dir("classes/java/main"))
}

tasks.withType(JavaExec) {
  jvmArgs = [
          "-Djava.library.path=${projectDir}/libs"
  ]
}


application {
  mainModule = 'gameengine'
  mainClass = 'gameengine.Main'
}

javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing' , 'javafx.media']
}

dependencies {
  implementation('org.controlsfx:controlsfx:11.2.1')
  implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
    exclude(group: 'org.openjfx')
  }
  implementation('net.synedra:validatorfx:0.5.0') {
    exclude(group: 'org.openjfx')
  }
  implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
  implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
  implementation('com.github.almasb:fxgl:17.3') {
    exclude(group: 'org.openjfx')
    exclude(group: 'org.jetbrains.kotlin')
  }
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
  useJUnitPlatform()
}

jlink {
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}

project.ext.lwjglNatives = "native-windows" // Aggiorna come necessario
project.ext.jomlVersion = "1.10.7" // Assicurati di usare una versione recente

def osName = System.getProperty("os.name").toLowerCase()
def osArch = System.getProperty("os.arch").toLowerCase()

if (osName.contains("linux")) {
  project.ext.lwjglNatives = "natives-linux"
  if (osArch.contains("arm")) {
    project.ext.lwjglNatives += osArch.contains("64") ? "-arm64" : "-arm32"
  } else if (osArch.startsWith("ppc")) {
    project.ext.lwjglNatives += "-ppc64le"
  } else if (osArch.startsWith("riscv")) {
    project.ext.lwjglNatives += "-riscv64"
  }
} else if (osName.contains("windows")) {
  project.ext.lwjglNatives = osArch.contains("64") ? "natives-windows" : "natives-windows-x86"
  if (osArch.contains("aarch64")) {
    project.ext.lwjglNatives += "-arm64"
  }
} else if (osName.contains("mac")) {
  project.ext.lwjglNatives = osArch.contains("64") ? "natives-macos" : "natives-macos-x86"
}

repositories {
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

dependencies {

  //GSON
  implementation 'com.google.code.gson:gson:2.11.0'

  // Include ImGui dependencies
  implementation files('libs/imgui-binding-1.76-0.14.jar')
  implementation files('libs/imgui-lwjgl3-1.76-0.14.jar')

  //JBox2D
  implementation files('libs/jbox2d-library.jar')

  // LWJGL dependencies
  implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

  ['', '-opengl', '-glfw'].each {
    implementation "org.lwjgl:lwjgl$it:$lwjglVersion"
    runtimeOnly "org.lwjgl:lwjgl$it::natives-windows"
    runtimeOnly "org.lwjgl:lwjgl$it::natives-windows-x86"
    runtimeOnly "org.lwjgl:lwjgl$it::natives-linux"
  }

  implementation "org.lwjgl:lwjgl"
  implementation "org.lwjgl:lwjgl-assimp"
  implementation "org.lwjgl:lwjgl-glfw"
  implementation "org.lwjgl:lwjgl-nfd"
  implementation "org.lwjgl:lwjgl-openal"
  implementation "org.lwjgl:lwjgl-opengl"
  implementation "org.lwjgl:lwjgl-stb"
  runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
  implementation "org.joml:joml:${jomlVersion}"
}
